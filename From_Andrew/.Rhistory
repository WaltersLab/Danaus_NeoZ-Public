mergedcoveragedepth.txt
setwd("~/Documents/Projects/Monarch_Zlinkage_by_Orthology/From_Andrew")
mergedcoveragedepth.txt
coveragedata=read.table("mergedcoveragedepth.txt",header=T)
str(coveragedata)
coverageforz=na.omit(coveragedata)
str(coverageforz)
for(i in 3:8)#
{#
	for(j in 1:length(normalcoverage[,1]))#
	{#
		normalcoverage[j,i]=normalcoverage[j,i]/mean(normalcoverage[,i])#
	}#
}
normalcoverage=coverageforz
for(i in 3:8)#
{#
	for(j in 1:length(normalcoverage[,1]))#
	{#
		normalcoverage[j,i]=normalcoverage[j,i]/mean(normalcoverage[,i])#
	}#
}
? colmean
? colmeans
? colMeans
tmp <- coverageforz[,3:8] / colMeans(coverageforz[,3:8])
head(tmp)
tmp <- t (t(coverageforz[,3:8]) / colMeans(coverageforz[,3:8]) )
head(tmp)
head(normalcoverage)
library(baySeq)
plotMA
topCounts
colMeans(coverageforz[,3:8])
tail(tmp)
tail(normalcoverage[,3:8])
tmp <- t (t(coverageforz[,3:8]) / colMeans(coverageforz[,3:8]) )
tail(normalcoverage[,3:8])
tail(tmp)
x <- matrix(10,10, 1:10)
x
x <- matrix(1:10, 10,10)
x
x <- matrix(1:10, 10,6)
x
x/1:10
x/colMeans(x)
x/1:6
x
t(x)/1:6
t(t(x)/1:6)
x + 1:6
? sweep
head(tmp)
head(normalcoverage[,3:8])
normalcoverage=coverageforz#
for(i in 3:8)#
{#
	for(j in 1:length(normalcoverage[,1]))#
	{#
		normalcoverage[j,i]=normalcoverage[j,i]/mean(normalcoverage[,i])#
	}#
}
plot(tmp[,1]~normalcoverage[,3])
colMeans(coverageforz[,3:8])
normalcoverage <- tmp
malemean2=(normalcoverage[,3] + normalcoverage[,6] + normalcoverage[,8])/3
normalcoverage=coverageforz
normalcoverage[,3:8] <- tmp
malemean2=(normalcoverage[,3] + normalcoverage[,6] + normalcoverage[,8])/3
femalemean2=(normalcoverage[,4] + normalcoverage[,5] + normalcoverage[,7])/3
countratio2=log2(malemean2/femalemean2)
plot(normalcoverage$Scaffold,countratio2)
warnings()
head(normalcoverage)
plot(log10(normalcoverage$Length),countratio2)  # JRW
plot(log10(normalcoverage$Length),countratio2, cex = .5, pch = 19)  # JRW
subber=data.frame(normalcoverage$Scaffold[1:500],countratio2[1:500])
subber=as.numeric(subber)
head(subber)
answer=subber[which(subber[,2] >.5),]
answer
points(log10(normalcoverage$Length[inds]),countratio2[inds], col="red")
inds=c(1,3,5,12,28,66,68,75,83,134,145,146,498)
points(log10(normalcoverage$Length[inds]),countratio2[inds], col="red")
abline(h=1, col="blue", lty=2)
abline(h=0, col="black", lty=2)
#making a histogram of coverage differences#
hist.data=hist(countratio2[1:500],breaks=seq(-2,2,.1))#
hist.data$counts = log10(hist.data$counts)#
plot(hist.data, ylab='log10(Frequency)',ylim=c(0,2.5),xlim=c(-1.5,1.5),#
main="Distribution of coverage difference between sexes",xlab="Log2(Male/Female)")
plot(log10(normalcoverage$Length),countratio2, cex = .5, pch = 19)  # JRW#
points(log10(normalcoverage$Length[inds]),countratio2[inds], col="red")#
abline(h=1, col="blue", lty=2)#
abline(h=0, col="black", lty=2)
normalcoverage=coverageforz#
normCovJRW <- normalcoverage#
for(i in 3:8)#
{#
	for(j in 1:length(normalcoverage[,1]))#
	{#
		normalcoverage[j,i]=normalcoverage[j,i]/mean(normalcoverage[,i])#
	}#
}#
meanCov <- colMeans(coverageforz[,3:8])#
for(i in 3:8)#
{#
	for(j in 1:length(normCovJRW[,1]))#
	{#
		normCovJRW[j,i]= normCovJRW[j,i]/ meanCov[i]#
	}#
}
tail(tmp)
tail(normCovJRW)
meanCov <- colMeans(coverageforz[,3:8])#
for(i in 3:8)#
{#
	for(j in 1:length(normCovJRW[,1]))#
	{#
		normCovJRW[j,i]= normCovJRW[j,i]/ meanCov[i-2]#
	}#
}
tail(tmp)
tail(normCovJRW)
normalcoverage=coverageforz
normCovJRW <- normalcoverage
for(i in 3:8)#
{#
	for(j in 1:length(normalcoverage[,1]))#
	{#
		normalcoverage[j,i]=normalcoverage[j,i]/mean(normalcoverage[,i])#
	}#
}#
meanCov <- colMeans(coverageforz[,3:8])#
for(i in 3:8)#
{#
	for(j in 1:length(normCovJRW[,1]))#
	{#
		normCovJRW[j,i]= normCovJRW[j,i]/ meanCov[i-2]#
	}#
}
tail(normCovJRW)
tail(tmp)
head(tmp)
head(normalcoverage)
tail(tmp)
tail(normalcoverage)
plot(log10(normalcoverage$Length),countratio2, cex = .5, pch = 19)  # JRW#
points(log10(normalcoverage$Length[inds]),countratio2[inds], col="red")#
abline(h=1, col="blue", lty=2)#
abline(h=0, col="black", lty=2)
malemean2=(normalcoverage[,3] + normalcoverage[,6] + normalcoverage[,8])/3#
femalemean2=(normalcoverage[,4] + normalcoverage[,5] + normalcoverage[,7])/3#
#now make the ratio#
countratio2=log2(malemean2/femalemean2)
plot(log10(normalcoverage$Length),countratio2, cex = .5, pch = 19)  # JRW#
points(log10(normalcoverage$Length[inds]),countratio2[inds], col="red")#
abline(h=1, col="blue", lty=2)#
abline(h=0, col="black", lty=2)
subber=data.frame(normalcoverage$Scaffold[1:500],countratio2[1:500])
subber=as.numeric(subber)
str(subber)
which(subber[,2] >.5)
tmp <- t (t(coverageforz[,3:8]) / colMeans(coverageforz[,3:8]) )  #JRW
normalcoverage[,3:8] <- tmp  #JRW
normalcoverage[28,]
normalcoverage[20:30,]
? var
apply(normalcoverage[inds,3:8], 1, var)
apply(normalcoverage[inds,c(3,6,8)], 1, var) * apply(normalcoverage[inds,c(4,5,7)], 1, var)
apply(normalcoverage[inds,c(3,6,8)], 1, var) - apply(normalcoverage[inds,c(4,5,7)], 1, var)
?stdev
?std
?sd
apply(normalcoverage[inds,c(3,6,8)], 1, sd) * apply(normalcoverage[inds,c(4,5,7)], 1, sd)
# generate log normal data #
set.seed(5)#
#
# dropped meanlog#
z <- abs(rlnorm(n = 10000, meanlog = 1, sdlog = 2)) #
#
# differential expression (fold-change).#
delev <- 4; desd = 2#
deslev <- c(abs(rnorm(500, mean = delev, sd = desd)), -abs(rnorm(500, mean = delev, sd = desd)))#
sdl = 10#
# generate x and y data as z + error; first thousand data points are differentially expressed evenly in both directions #
simMde <- abs(z + rnorm(10000, mean = 0, sd = sdl)); simMde[1:1000] <- simMde[1:1000] / 2^deslev; simMde <- round(simMde, digits = 1)#
simFde <- abs(z + rnorm(10000, mean = 0, sd = sdl)); simFde[1:1000] <- simFde[1:1000] * 2^deslev; simFde <- round(simFde, digits = 1)
genes <- data.frame("male"=simMde, "female"=simFde)
str(genes)
plot(gene$m ~ gene$f)
plot(genes$m ~ genes$f)
plot(log2(genes$m) ~ log2(genes$f) )
plot(y = log2(simMde) - log2(simFde), x = log2(simMde + simFde) / 2, col=rgb(0,0,0, alpha = .1), pch=19, cex = .5,  ylab = "Log2(Male:Female) expression", xlab = "Log2(Average Expression)")
str(genes)
chromtype <- rep("A", 9500), rep("X", 500)
genes$chrom <- sample(chromtype)
? rep
chromtype <- c(rep("A", 9500), rep("X", 500))
genes$chrom <- sample(chromtype)
str(genes)
par(mfrow = c(1,2))#
boxplot(genes$m ~ genes$chrom, main"Male")#
boxplot(genes$f ~ genes$chrom, main"Male")
boxplot(genes$m ~ genes$chrom, main="Male")#
boxplot(genes$f ~ genes$chrom, main="Female")
par(mfrow = c(1,2))#
boxplot(log2(genes$m) ~ genes$chrom, main="Male")#
boxplot(log2(genes$f) ~ genes$chrom, main="Female")
tmp <- normData(genes[,1:2])
normData <- function(x) {#
	x <- as.numeric(x)#
	normX <- t(t(x)/colsums(x))#
	return(normX)#
}
tmp <- normData(genes[,1:2])
normData <- function(x) {#
	x <- as.numeric(as.matrix(x))#
	normX <- t(t(x)/colsums(x))#
	return(normX)#
}#
#
tmp <- normData(genes[,1:2])
normData <- function(x) {#
	x <- as.numeric(as.matrix(x))#
	normX <- t(t(x)/colSums(x))#
	return(normX)#
}#
#
tmp <- normData(genes[,1:2])
head(as.matrix(genes[,1:2]))
normData <- function(x) {#
	x <- as.numeric(as.matrix(x))#
	normX <- t(t(x)/colSums(x))#
	return(normX)#
}
tmp <- normData(genes[,1:2])
genes[,1:2]
x <- genes[,1:2]
as.numeric(as.matrix(x)
)
normData <- function(x) {#
#
	normX <- t(t(x)/colSums(x))#
	return(normX)#
}
tmp <- normData(as.matrix(genes[,1:2]))
head(tmp)
boxplot(log2(tmp[,1]) ~ genes$chrom, main="Male")#
boxplot(log2(tmp[,2]) ~ genes$chrom, main="Female")
normData <- function(x) {#
#
	normX <- t(t(x)/colMeans(x))#
	return(normX)#
}#
#
tmp <- normData(as.matrix(genes[,1:2]))
head(tmp)
head(genes)
plot(log2(tmp[,1]), log2(tmp[,2]))
plot(log2(genes[,1]), log2(genes[,2]))
tmp2<- normData[m=genes$m, genes$f]
normData <- function(m , f) {#
	x <- cbind[m,f]#
	normX <- t(t(x)/colMeans(x))#
	return(normX)#
}
tmp2<- normData[m=genes$m, genes$f]
tmp2<- normData(m=genes$m, genes$f)
normData <- function(m , f) {#
	x <- cbind(m,f)#
	normX <- t(t(x)/colMeans(x))#
	return(normX)#
}
tmp2<- normData(m=genes$m, genes$f)
head(tmp2)
head(tmp)
m1 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f1 <- genes$f#
#
s1 <- normData(m=m1, f=f1)
par(mfrow = c(1,2))#
boxplot(log2(s1[,1]) ~ genes$chrom, main="Male")#
boxplot(log2(s1[,2]) ~ genes$chrom, main="Female")
plot(density(rnorm(1000)))
bxp <- function(m,f, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chr == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chr == "A"]), col = "red")#
}
bxp(m=tmp[,1], f=tmp[,2])
bxp <- function(m,f, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chr == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chr == "Z"]), col = "red")#
}#
#
bxp(m=tmp[,1], f=tmp[,2], outline=F)
head(genes$chr)
str(genes)
table(genes$chr)
plot(density(rnorm(100)))
lines(density(rnorm(100)+.2))
bxp <- function(m,f, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chr == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chr == "X"]), col = "red")#
}#
#
bxp(m=tmp[,1], f=tmp[,2], outline=F)
bxp(m=s1[,1], f=s1[2])
m1 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f1 <- genes$f
s1 <- normData(m=m1, f=f1)
bxp(m=s1[,1], f=s1[2])
head(s1)
sum(is.finite(s1))
head(genes)
bxp <- function(m,f, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
}
m1 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f1 <- genes$f#
#
s1 <- normData(m=m1, f=f1)
bxp(m=s1[,1], f=s1[2])
bxp(m=s1[,1], f=s1[2])
str(s1)
head(s1)
bxp(m=s1[,1], f=s1[,2])
m2 <- genes$m #
f2 <- genes$f * 2#
#
s2 <- normData(m=m2, f=f2)#
bxp(m=s2[,1], f=s2[,2])
bxp(m=s2[,1], f=s2[,2], outline =F)
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outine=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outine=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
}
m1 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f1 <- genes$f#
#
s1 <- normData(m=m1, f=f1)#
bxp(m=s1[,1], f=s1[,2])
m3 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f3 <- genes$f * 2#
#
s3 <- normData(m=m3, f=f3)#
bxp(m=s3[,1], f=s3[,2], outline =F)
dose <- 0.5#
#
m4 <- genes$m * ifelse(genes$chr == "X", dose, 1/dose)#
f4 <- genes$f #
#
s4 <- normData(m=m4, f=f4)#
bxp(m=s4[,1], f=s4[,2], outline =F)
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outine=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outine=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A"]), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X"]), "\n")#
}
bxp(m=s4[,1], f=s4[,2], outline =F)
? mean
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outine=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outine=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A"], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X"], na.rm=T), "\n")#
}
bxp(m=s4[,1], f=s4[,2], outline =F)
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outine=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outine=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A"], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X"], na.rm=T), "\n")#
	return(lograt)#
}
lr4 <- bxp(m=s4[,1], f=s4[,2], outline =F)
head(lr4)
sum(is.na(lr4))
mean(s4[,1])
mean(s4[,2])
head(s4)
mean(s4[,"f"])
mean(log2(s4[,1]) - log2(s4[,2]))
log2(s4[,1]) - log2(s4[,2])
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outine=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outine=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
	return(lograt)#
}
lr4 <- bxp(m=s4[,1], f=s4[,2], outline =F)
bxp(m=s3[,1], f=s3[,2], outline =F)
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outine=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outine=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
#	return(lograt)#
}
bxp(m=s3[,1], f=s3[,2], outline =F)
s0 <- normData(m=genes$m, f= genes$F)#
bxp(m=s0[,1], f=s0[,2])
s0 <- normData(m=genes$m, f= genes$f)
bxp(m=s0[,1], f=s0[,2])
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outine=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outine=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
#	return(lograt)#
}
bxp(m=s0[,1], f=s0[,2])
bxp(m=s0[,1], f=s0[,2], outline=F)
bxp <- function(m,f, outine=F, ...) {#
	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outline=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outline=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density")#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
#	return(lograt)#
}
lr4 <- bxp(m=s4[,1], f=s4[,2], outline =F)
lr4 <- bxp(m=s4[,1], f=s4[,2])
bxp(m=s1[,1], f=s1[,2])
bxp <- function(m,f, outine=F, ...) {#
#	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outline=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outline=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density", xlim = c(3,3))#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
#	return(lograt)#
}
par(mfrow=c(2,3))
bxp(m=s1[,1], f=s1[,2])
lr4 <- bxp(m=s4[,1], f=s4[,2])
bxp <- function(m,f, outine=F, ...) {#
#	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outline=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outline=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density", xlim = c(-3,3))#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
#	return(lograt)#
}
bxp(m=s1[,1], f=s1[,2])
lr4 <- bxp(m=s4[,1], f=s4[,2])
abline(v=0, lty=2)
z <- abs(rlnorm(n = 10000, meanlog = 1, sdlog = 2))
# generate log normal data #
set.seed(5)#
#
# dropped meanlog#
z <- abs(rlnorm(n = 10000, meanlog = 1, sdlog = 2)) #
#
# differential expression (fold-change).#
delev <- 4; desd = 2#
deslev <- c(abs(rnorm(500, mean = delev, sd = desd)), -abs(rnorm(500, mean = delev, sd = desd)))#
sdl = 10#
# generate x and y data as z + error; first thousand data points are differentially expressed evenly in both directions #
simMde <- abs(z + rnorm(10000, mean = 0, sd = sdl)); simMde[1:1000] <- simMde[1:1000] / 2^deslev; simMde <- round(simMde, digits = 1)#
simFde <- abs(z + rnorm(10000, mean = 0, sd = sdl)); simFde[1:1000] <- simFde[1:1000] * 2^deslev; simFde <- round(simFde, digits = 1)
plot(y = log2(simMde) - log2(simFde), x = log2(simMde + simFde) / 2, col=rgb(0,0,0, alpha = .1), pch=19, cex = .5,  ylab = "Log2(Male:Female) expression", xlab = "Log2(Average Expression)")
plot(y = log2(simMde) - log2(simFde), x = log2(simMde + simFde) / 2, col=rgb(0,0,0, alpha = .1), pch=19, cex = .5,  ylab = "Log2(Male:Female) expression", xlab = "Log2(Average Expression)")
normData <- function(m , f) {#
	x <- cbind(m,f)#
	normX <- t(t(x)/colSums(x))#
	return(normX)#
}
bxp <- function(m,f, outine=F, ...) {#
#	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outline=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outline=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Male:Femal ratio", ylab = "Density", xlim = c(-3,3))#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
	abline(v=0, lty=2)#
#	return(lograt)#
}
s0 <- normData(m=genes$m, f= genes$f)
bxp(m=s0[,1], f=s0[,2])
par(mfrow=c(1,3))
bxp(m=s0[,1], f=s0[,2])
colSums(genes[,1:2])
m1 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f1 <- genes$f
s1 <- normData(m=m1, f=f1)
colSums(s1)
normData <- function(m , f) {#
	x <- cbind(m,f)#
	normX <- t(t(x)/colSums(x))#
	return(normX)#
}
s0 <- normData(m=genes$m, f= genes$f)
colSums(s0)
bxp(m=s1[,1], f=s1[,2])
bxp <- function(m,f, outine=F, ...) {#
#	par(mfrow=c(1,3))#
	boxplot(log2(m) ~ genes$chrom, main="Male",outline=F,...)#
	boxplot(log2(f) ~ genes$chrom, main="Female",outline=F,...)#
	lograt <- log2(m)-log2(f)#
	plot(density(lograt[genes$chrom == "A"]), xlab="Log2()Male:Female ratio)", ylab = "Density", xlim = c(-3,3))#
	lines(density(lograt[genes$chrom == "X"]), col = "red")#
	cat("Mean A lograt:", mean(lograt[genes$chrom == "A" & is.finite(lograt)], na.rm=T), "\n")#
	cat("Mean X lograt:", mean(lograt[genes$chrom == "X" & is.finite(lograt)], na.rm=T), "\n")#
	abline(v=0, lty=2)#
#	return(lograt)#
}
m2 <- genes$m #
f2 <- genes$f * 2#
#
s2 <- normData(m=m2, f=f2)#
bxp(m=s2[,1], f=s2[,2], outline =F)
m2 <- genes$m #
f2 <- genes$f * 2
s2 <- normData(m=m2, f=f2)
bxp(m=s2[,1], f=s2[,2], outline =F)
bxp(m=s2[,1], f=s2[,2])
m3 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f3 <- genes$f * 2#
#
s3 <- normData(m=m3, f=f3)#
bxp(m=s3[,1], f=s3[,2], outline =F)
m3 <- genes$m * ifelse(genes$chr == "X", 0.5, 1)#
f3 <- genes$f * 2#
#
s3 <- normData(m=m3, f=f3)#
bxp(m=s3[,1], f=s3[,2])
m4 <- genes$m * ifelse(genes$chr == "X", dose, 1/dose)#
f4 <- genes$f #
#
s4 <- normData(m=m4, f=f4)#
lr4 <- bxp(m=s4[,1], f=s4[,2])
